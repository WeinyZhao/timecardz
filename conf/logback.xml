<?xml version="1.0" encoding="UTF-8" ?>
<configuration scan="true" scanPeriod="30 seconds">
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
	    <filter class="ch.qos.logback.core.filter.EvaluatorFilter">      
	      <evaluator class="ch.qos.logback.classic.boolex.GEventEvaluator"> 
	        <expression>
	           e.level.toInt() &lt;= INFO.toInt()
	        </expression>
	      </evaluator>
	      <OnMismatch>DENY</OnMismatch>
	      <OnMatch>NEUTRAL</OnMatch>
	    </filter>
    
		<encoder>
			<pattern>%date{ISO8601} [%X{txId}-%X{user}] [%thread] %caller{1} %-4level: %message%n</pattern>
		</encoder>
	</appender>

	<appender name="STDERR" class="ch.qos.logback.core.ConsoleAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter"> 
    	    <level>warn</level>
    	</filter>
    
		<encoder>
			<pattern>%date{ISO8601} [%X{txId}-%X{user}] %caller{1} %-4level: %message%n</pattern>
		</encoder>
		<target>System.err</target>
	</appender>
	
    <!--  these can effect performance greatly, if doing any performance testing uncomment these lines! -->
    <!--  hierarchical entries left on purpose to make it easier to get just what you want  -->
    <!--  com.alvazan.orm.logging is particularly brutal for performance, always set to at least WARN except in dev env -->
    
    <!-- this config will be the least verbose: -->
    <logger name="org.hibernate" level="WARN"/>
    <logger name="java.sql" level="WARN"/>
    
	<root>
		<level value="TRACE" />
		<appender-ref ref="STDOUT"/>
		<appender-ref ref="STDERR"/>
	</root>
</configuration>
